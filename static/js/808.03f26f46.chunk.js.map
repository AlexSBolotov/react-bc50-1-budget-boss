{"version":3,"file":"static/js/808.03f26f46.chunk.js","mappings":"yMACA,GAAgB,SAAW,+BAA+B,UAAY,gCAAgC,WAAa,kC,SCgBnH,EAfqB,WACnB,OACEA,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,WAAaC,UAC3BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,SAAWC,SAAA,EACzBH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,UAAYC,SAAC,uEAG3BH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,WAAaC,SAAC,mDAMpC,ECdA,EAAgC,+BAAhC,EAAgF,gCAAhF,EAAgI,+BAAhI,EAA8K,8B,UCyB9K,EAtB0B,SAAHE,GAA6B,IAAvBC,EAAeD,EAAfC,gBACrBC,GAAWC,EAAAA,EAAAA,MAcjB,OACER,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASR,UAAWC,EAAkBQ,QAdlC,WACjB,IAAMC,EAAaC,OAAON,GAC1BO,QAAQC,IAAIH,GACRA,EAAa,GACfJ,GAASQ,EAAAA,EAAAA,IAAc,CAAEJ,WAAYA,KACrCK,YAAW,WACTT,GAASU,EAAAA,EAAAA,MACX,GAAG,MAEHC,MAAM,+BAEV,EAGyEf,SAAC,WAI5E,E,oBCfMgB,EAAS,SAAAC,GAWb,OAVa,IAAIC,KAAKC,aAAa,QAAS,CAC1CC,MAAO,UAEPC,sBAAuB,EACvBC,YAAa,OACbC,YAAa,UAEZP,OAAOC,GACPO,QAAQ,IAAK,IAGlB,EAyCA,EAxCgB,WACd,IAAMC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7BnB,GAAakB,EAAAA,EAAAA,IAAYE,EAAAA,IACzBC,EAAyB,IAAfrB,EAAmBiB,EAAiBjB,EACpDsB,GAA0BC,EAAAA,EAAAA,UAAS,GAADC,OAC7BhB,EAAOS,EAAeQ,QAAQ,IAAG,SACrCC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAFMM,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAQtB,OACEjC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAeC,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBC,SAAC,cAChCH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXuC,KAAK,UACLC,MAAM,kCACNjC,KAAK,SACLW,MAAOmB,EACPI,SAbe,SAAAC,GACnBJ,EAASI,EAAEC,OAAOzB,MACpB,EAYM0B,SAA6B,IAAnBlB,EACVL,MAAO,CACLwB,aAAiC,IAAnBnB,EAAuB,oBAAsB,OAC3DoB,YAAgC,IAAnBpB,EAAuB,OAAS,oBAC7CqB,UAA8B,IAAnBrB,EAAuB,aAAe,gBAEnDsB,YACqB,IAAnBtB,EAAoB,eAAAO,OAEbhB,EAAOa,EAAQI,QAAQ,IAAG,WAGnCR,IAAkB5B,EAAAA,EAAAA,KAACmD,EAAiB,CAAC7C,gBAAiBiC,KACtDX,IAAkB5B,EAAAA,EAAAA,KAACoD,EAAY,MAGvC,C,gHCpCA,ICxBI,EDyBJ,EAAe,IAA0B,4DExBzC,EAA0B,6B,SCc1B,EAZoB,WAElB,OACEpD,EAAAA,EAAAA,KAAA,OAAKqD,GAAG,UAASlD,UACfC,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAWoD,MAAM,OAAOC,OAAO,OAAMpD,SAAA,CAAC,WAErDH,EAAAA,EAAAA,KAAA,OAAKwD,IAAKC,EAAYC,IAAI,gBAIlC,E,UCZA,EAA4B,mCAA5B,EAAqE,6BAArE,EAAwG,6B,8BCmDxG,EA/CwB,WACtB,IAAMnD,GAAWC,EAAAA,EAAAA,MACXmD,GAAyB9B,EAAAA,EAAAA,IAAY+B,EAAAA,IAC3C,OACExD,EAAAA,EAAAA,MAAA,OAAKH,UAAW4D,EAAiB1D,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,UACEuB,MAAO,CACLuC,UAC6B,aAA3BH,EACI,sBACA,OACNI,gBAC6B,aAA3BJ,EAAwC,UAAY,UACtDK,MAAkC,aAA3BL,EAAwC,UAAY,UAC3DM,YAC6B,aAA3BN,EAAwC,UAAY,eAExDjD,QAAS,kBAAMH,GAAS2D,EAAAA,EAAAA,IAAsB,YAAY,EAC1DzD,KAAK,SAELR,UAAW4D,EAAW1D,SACvB,cAGDH,EAAAA,EAAAA,KAAA,UACEuB,MAAO,CACLuC,UAC6B,YAA3BH,EACI,sBACA,OACNI,gBAC6B,YAA3BJ,EAAuC,UAAY,UACrDK,MAAkC,YAA3BL,EAAuC,UAAY,UAC1DM,YAC6B,YAA3BN,EAAuC,UAAY,eAEvDjD,QAAS,kBAAMH,GAAS2D,EAAAA,EAAAA,IAAsB,WAAW,EACzDzD,KAAK,SAELR,UAAW4D,EAAW1D,SACvB,aAKP,ECjDA,EAAsB,qB,UCgCtB,EAxBgB,WACd,IAAMyB,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAInC,OACE1B,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OACEH,UAAWC,EACXqB,MAAO,CAAE4C,IAAwB,IAAnBvC,EAAuB,QAAU,SAAUzB,SAAA,EAEzDH,EAAAA,EAAAA,KAACoE,EAAAA,GAAO,CACNf,GAAG,WACH9B,MAAO,CAAE8C,cAAkC,IAAnBzC,EAAuB,OAAS,QAASzB,UAEjEH,EAAAA,EAAAA,KAACsE,EAAW,OAEdtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAO,QAEVvE,EAAAA,EAAAA,KAACwE,EAAe,MAGtB,EC9BA,EAAoC,gDAApC,EAAuG,+CCAvG,GAAgB,eAAiB,4CAA4C,YAAc,yCAAyC,aAAe,0CAA0C,oBAAsB,iDAAiD,YAAc,yCAAyC,iBAAmB,+CCDjUC,EAAmB,SAAAhC,GAC9B,OAAQA,GACN,IAAK,uCACH,MAAO,UACT,IAAK,6CACH,MAAO,WACT,IAAK,2BACH,MAAO,QACT,IAAK,uCACH,MAAO,QACT,IAAK,qBACH,MAAO,MACT,IAAK,2BACH,MAAO,OACT,IAAK,2BACH,MAAO,OACT,IAAK,uCACH,MAAO,SACT,IAAK,mDACH,MAAO,YACT,IAAK,6CACH,MAAO,UACT,IAAK,uCACH,MAAO,WACT,IAAK,6CACH,MAAO,WAIb,ECkFA,EAtF4B,WAC1B,IAAMiC,GAAgB7C,EAAAA,EAAAA,IAAY8C,EAAAA,IAC5BC,GAAe/C,EAAAA,EAAAA,IAAYgD,EAAAA,IAC3BlB,GAAyB9B,EAAAA,EAAAA,IAAY+B,EAAAA,IAE3C3B,GAA8BC,EAAAA,EAAAA,UAAS0C,GAAavC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA7C6C,EAAOzC,EAAA,GAAE0C,EAAU1C,EAAA,GAE1B2C,GAAgC9C,EAAAA,EAAAA,UAASwC,GAAcO,GAAA3C,EAAAA,EAAAA,GAAA0C,EAAA,GAAhDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,IAE5BG,EAAAA,EAAAA,YAAU,WACRL,EAAWH,EACb,GAAG,CAACA,KAEJQ,EAAAA,EAAAA,YAAU,WACRD,EAAYT,EACd,GAAG,CAACA,IAEJ,IAE0CW,EAKnCC,EAPHC,EAAc,GAEa,YAA3B5B,EACF4B,EAGc,QAHHF,EACTG,OAAOC,QAAQX,GACZY,MAAM,GAAG,IAAIC,MAAOC,WAAa,GACjCC,iBAAS,IAAAR,EAAAA,EAAI,GAElBE,EAGc,QAHHD,EACTE,OAAOC,QAAQP,GACZQ,MAAM,GAAG,IAAIC,MAAOC,WAAa,GACjCC,iBAAS,IAAAP,EAAAA,EAAI,GAGpB,OACEtF,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,eAAiBC,UAC/BC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAAA,aAAeC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,YAAcC,UAC9BH,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAAA,MAAI8F,QAAQ,IAAI7F,UAAWC,EAAAA,oBAAsBC,SAAC,iBAKtDC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAAA,YAAcC,SAAA,CAC7BoF,EAAYQ,KAAI,SAAAC,GAKf,MAJc,QAAVA,EAAG,KACLA,EAAG,GAAK,IAIR5F,EAAAA,EAAAA,MAAA,MAA6BH,UAAWC,EAAAA,YAAcC,SAAA,EACpDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,iBAAmBC,SAC/BsE,EAAiBuB,EAAG,OAEvBhG,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,iBAAmBC,UAnElCiB,EAmE4C4E,EAAG,GAlEhD,IAAI3E,KAAKC,aAAa,QAAS,CAC1CC,MAAO,UACP0E,SAAU,MAGVzE,sBAAuB,EACvBC,YAAa,SAEZN,OAAOC,GACPO,QAAQ,IAAK,UAyDsD,GAAAQ,OAJ9C6D,EAAG,IAAE7D,OAAG6D,EAAG,KA/DrB,IAAA5E,CAsEN,KACAhB,EAAAA,EAAAA,MAAA,MAAImB,MAAO,CAAEgC,OAAQ,IAAMtD,UAAWC,EAAAA,YAAcC,SAAA,EAClDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,oBACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,uBAEjBE,EAAAA,EAAAA,MAAA,MAAImB,MAAO,CAAEgC,OAAQ,IAAMtD,UAAWC,EAAAA,YAAcC,SAAA,EAClDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,oBACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,uBAEjBE,EAAAA,EAAAA,MAAA,MAAImB,MAAO,CAAEgC,OAAQ,IAAMtD,UAAWC,EAAAA,YAAcC,SAAA,EAClDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,oBACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,uBAEjBE,EAAAA,EAAAA,MAAA,MAAImB,MAAO,CAAEgC,OAAQ,IAAMtD,UAAWC,EAAAA,YAAcC,SAAA,EAClDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,oBACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,uBAEjBE,EAAAA,EAAAA,MAAA,MAAImB,MAAO,CAAEgC,OAAQ,IAAMtD,UAAWC,EAAAA,YAAcC,SAAA,EAClDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,oBACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,uBAEjBE,EAAAA,EAAAA,MAAA,MAAImB,MAAO,CAAEgC,OAAQ,IAAMtD,UAAWC,EAAAA,YAAcC,SAAA,EAClDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,oBACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,6BAM3B,E,oBC5EegG,EAA4B,SAAAzD,GACvC,OAAQA,EAAK0D,QACX,IAAK,mDACH,MAAO,WACT,IAAK,mDACH,MAAO,UACT,IAAK,qEACH,MAAO,gBACT,IAAK,mDACH,MAAO,SACT,IAAK,yDACH,MAAO,YACT,IAAK,iEACH,MAAO,UACT,IAAK,6CACH,MAAO,WACT,IAAK,qGACH,MAAO,6BACT,IAAK,uEACH,MAAO,kBACT,IAAK,qEACH,MAAO,YACT,IAAK,uCACH,MAAO,QACT,IAAK,gBACH,MAAO,SACT,IAAK,qDACH,MAAO,oBAIb,EC/DF,EAA4B,oCAA5B,EAAwE,gCAAxE,EAAiH,iCAAjH,EAAgK,sCAAhK,EAAoN,sCAApN,EAA8Q,4CAA9Q,EAA+U,6CAA/U,EAAmY,+BAAnY,EAA8a,oCAA9a,EAA8d,oCAA9d,EAAqhB,2CAArhB,EAAglB,wCAAhlB,EAA+nB,+BAA/nB,EAAuqB,iCZAnqB,EAAY,CAAC,QAAS,WAC1B,SAAS,IAAiS,OAApR,EAAWX,OAAOY,OAASZ,OAAOY,OAAOC,OAAS,SAAUxD,GAAU,IAAK,IAAIyD,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcjB,OAAOmB,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQ7D,EAAO6D,GAAOD,EAAOC,GAAU,CAAE,OAAO7D,CAAQ,EAAU,EAASiE,MAAMC,KAAMR,UAAY,CAClV,SAAS,EAAyBE,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKJ,EAAnEzD,EACzF,SAAuC4D,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKJ,EAA5DzD,EAAS,CAAC,EAAOoE,EAAazB,OAAO0B,KAAKT,GAAqB,IAAKH,EAAI,EAAGA,EAAIW,EAAWT,OAAQF,IAAOI,EAAMO,EAAWX,GAAQU,EAASG,QAAQT,IAAQ,IAAa7D,EAAO6D,GAAOD,EAAOC,IAAQ,OAAO7D,CAAQ,CADhN,CAA8B4D,EAAQO,GAAuB,GAAIxB,OAAO4B,sBAAuB,CAAE,IAAIC,EAAmB7B,OAAO4B,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAOI,EAAMW,EAAiBf,GAAQU,EAASG,QAAQT,IAAQ,GAAkBlB,OAAOmB,UAAUW,qBAAqBT,KAAKJ,EAAQC,KAAgB7D,EAAO6D,GAAOD,EAAOC,GAAQ,CAAE,OAAO7D,CAAQ,CAG3e,SAAS0E,EAAYlH,EAAMmH,GACzB,IAAI9E,EAAQrC,EAAKqC,MACf+E,EAAUpH,EAAKoH,QACfC,EAAQ,EAAyBrH,EAAM,GACzC,OAAoB,gBAAoB,MAAO,EAAS,CACtDsH,MAAO,6BACPrE,MAAO,GACPC,OAAQ,GACRqE,QAAS,YACTC,IAAKL,EACL,kBAAmBC,GAClBC,QAAkBI,IAAVpF,EAAmC,gBAAoB,QAAS,CACzEqF,GAAIN,GACH,YAAc/E,EAAqB,gBAAoB,QAAS,CACjEqF,GAAIN,GACH/E,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EsF,EAAG,mQAEP,CACA,IAAI,EAA0B,aAAiBT,G,GAChC,I,Sa4Jf,EAlKyB,SAAHlH,GAA0B,IAJvB4H,EAIGC,EAAY7H,EAAZ6H,aAC1BjG,GAAsCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA9CkG,EAAW9F,EAAA,GAAE+F,EAAc/F,EAAA,GAClC2C,GAA8B9C,EAAAA,EAAAA,UAAS,MAAK+C,GAAA3C,EAAAA,EAAAA,GAAA0C,EAAA,GAArCqD,EAAOpD,EAAA,GAAEqD,EAAUrD,EAAA,GAEpBtB,GAAyB9B,EAAAA,EAAAA,IAAY+B,EAAAA,IACrCkB,GAAUjD,EAAAA,EAAAA,IAAY0G,EAAAA,IAEtBrD,GAAWrD,EAAAA,EAAAA,IAAY2G,EAAAA,IAEvBjI,GAAWC,EAAAA,EAAAA,MACXiI,GAdiBR,EAciBC,GAbjC/G,EAAAA,EAAAA,SAAOwE,KAAK+C,MAAMT,GAAO,eAe1BU,EACuB,YAA3BhF,EACImB,EAAQ8D,QAAO,SAAAC,GAAW,OAAIA,EAAYZ,OAASQ,CAAc,IACjEvD,EAAS0D,QAAO,SAAAC,GAAW,OAAIA,EAAYZ,OAASQ,CAAc,IAClEK,EAAc,SAAAf,GAClBO,EAAWP,GACXK,GAAe,SAAAW,GAAC,OAAKA,CAAC,GACxB,EAcA,OACE3I,EAAAA,EAAAA,MAAA4I,EAAAA,SAAA,CAAA7I,SAAA,EACEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,UAC1BC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAQC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAASC,UACzBC,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAcC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcC,SAAC,UAC9BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcC,SAAC,iBAC9BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAoBC,SAAC,cACpCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAqBC,SAAC,SACrCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,UAGnBE,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAOC,SAAA,CACtBwI,EAAqB5C,KAAI,SAAAkD,GAAK,OAC7B7I,EAAAA,EAAAA,MAAA,MAAoBH,UAAWC,EAAYC,SAAA,EACzCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYC,SAAE8I,EAAMhB,QACnCjI,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAmBC,SAAE8I,EAAMC,eAC1ClJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYC,SACxB+F,EAA0B+C,EAAME,aAEnCnJ,EAAAA,EAAAA,KAAA,MACEuB,MAAO,CACLyC,MAC6B,YAA3BL,EACI,UACA,WAER1D,UAAWC,EAAgBC,SAEC,YAA3BwD,EAAoC,GAAAxB,OAC9B8G,EAAMG,OAAM,aAAAjH,OACV8G,EAAMG,OAAM,WAEvBpJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYC,UACzBH,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLC,QAAS,kBAAMoI,EAAYG,EAAMI,IAAI,EACrCpJ,UAAWC,EAASC,UAEpBH,EAAAA,EAAAA,KAACsJ,EAAM,CAACrJ,UAAWC,UAzBhB+I,EAAMI,IA4BV,KAEPjJ,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,aAEFI,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,aAEFI,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,aAEFI,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,aAEFI,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,aAEFI,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,aAEFI,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,aAEFI,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,aAEFI,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,aAEFI,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAaqB,MAAO,CAAEgC,OAAQ,IAAKpD,SAAA,EAChDH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfF,EAAAA,EAAAA,KAAA,oBAKPmI,IACCnI,EAAAA,EAAAA,KAACuJ,EAAAA,EAAY,CACXC,WAAYV,EACZW,SAjImB,WACzBlJ,GAASmJ,EAAAA,EAAAA,IAAkBrB,IAC3B9H,GAASoJ,EAAAA,EAAAA,IAAsBtB,GAIjC,EA4HQ3F,MAAM,oBAKhB,ECnLA,EAAkC,+CAAlC,EAA8F,0CAA9F,GAAqJ,0CAArJ,GAAmN,iDAAnN,GAA0R,mDAA1R,GAA+V,+CAA/V,GAAga,+CAAha,GAAge,8CAAhe,GAAkiB,iDAAliB,GAA4lB,sCAA5lB,GAAyoB,oCCkBnoBkH,GAAU,SAAAxI,GACd,IAAMyI,EAAO,IAAIxI,KAAKC,aAAa,QAAS,CAC1CC,MAAO,UACP0E,SAAU,MAEV6D,YAAa,aACbtI,sBAAuB,EACvBC,YAAa,SAEZN,OAAOC,GACPO,QAAQ,IAAK,KAEhB,OAAOkI,EAAKE,UAAU,EAAG,GAAK,IAAMF,EAAKE,UAAU,EACrD,EAuFA,GArF+B,SAAH1J,GAA0B,IAnB7B4H,EAmBSC,EAAY7H,EAAZ6H,aAChCjG,GAAsCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA9CkG,EAAW9F,EAAA,GAAE+F,EAAc/F,EAAA,GAClC2C,GAA8B9C,EAAAA,EAAAA,UAAS,MAAK+C,GAAA3C,EAAAA,EAAAA,GAAA0C,EAAA,GAArCqD,EAAOpD,EAAA,GAAEqD,EAAUrD,EAAA,GAEpB+E,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MAErCvG,GAAyB9B,EAAAA,EAAAA,IAAY+B,EAAAA,IACrCkB,GAAUjD,EAAAA,EAAAA,IAAY0G,EAAAA,IACtBrD,GAAWrD,EAAAA,EAAAA,IAAY2G,EAAAA,IAEvBjI,GAAWC,EAAAA,EAAAA,MACXiI,GA9BiBR,EA8BiBC,GA7BjC/G,EAAAA,EAAAA,SAAOwE,KAAK+C,MAAMT,GAAO,eA+B1BU,EACuB,YAA3BhF,EACImB,EAAQ8D,QAAO,SAAAC,GAAW,OAAIA,EAAYZ,OAASQ,CAAc,IACjEvD,EAAS0D,QAAO,SAAAC,GAAW,OAAIA,EAAYZ,OAASQ,CAAc,IAGlEK,EAAc,SAAAf,GAClBO,EAAWP,GACXK,GAAe,SAAAW,GAAC,OAAKA,CAAC,GACxB,EAYA,OACE3I,EAAAA,EAAAA,MAAA4I,EAAAA,SAAA,CAAA7I,SAAA,EACEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBC,SAC/B6J,IACChK,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SACzBwI,EAAqB5C,KAAI,SAAAC,GAAE,OAC1B5F,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,GAAaC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,GAAoBC,SAAA,EAClCH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,GAAsBC,SAAE6F,EAAGkD,eACzC9I,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,GAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,GAAkBC,SAAE6F,EAAGiC,QACxCjI,EAAAA,EAAAA,KAAA,QAAAG,SAAO6F,EAAGmD,kBAGd/I,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,GAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KACEC,UAAWC,GACXqB,MAAO,CACLyC,MAC6B,YAA3BL,EACI,UACA,WACNxD,SAE0B,YAA3BwD,EAAoC,GAAAxB,OAC9ByH,GAAQ5D,EAAGoD,QAAO,aAAAjH,OAChByH,GAAQ5D,EAAGoD,QAAO,WAE7BpJ,EAAAA,EAAAA,KAAA,UACEU,QAAS,kBAAMoI,EAAY9C,EAAGqD,IAAI,EAClCpJ,UAAWC,GAASC,UAEpBH,EAAAA,EAAAA,KAACsJ,EAAM,CAACrJ,UAAWC,YA1BS8F,EAAGqD,IA6BhC,QAKZlB,IACCnI,EAAAA,EAAAA,KAACuJ,EAAAA,EAAY,CACXC,WAAYV,EACZW,SArDmB,WACzBlJ,GAASmJ,EAAAA,EAAAA,IAAkBrB,IAC3B9H,GAASoJ,EAAAA,EAAAA,IAAsBtB,GAIjC,EAgDQ3F,MAAM,oBAKhB,EC5FA,GAlB6B,SAAHrC,GAA0B,IAApB6H,EAAY7H,EAAZ6H,aACxB8B,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MAG3C,OACElK,EAAAA,EAAAA,KAAA,WAASC,UAAWC,EAAmBC,SACpC6J,GACChK,EAAAA,EAAAA,KAACmK,GAAsB,CAACjC,aAAcA,KAEtC9H,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAoBC,SAAA,EAClCH,EAAAA,EAAAA,KAACoK,EAAgB,CAAClC,aAAcA,KAChClI,EAAAA,EAAAA,KAACqK,EAAmB,QAK9B,ECtBA,GAA6B,oCAA7B,GAAwE,8BAAxE,GAAsH,uCAAtH,GAAqK,+BAArK,GAA6M,gCAA7M,GAAiT,oCAAjT,GAAiW,mCAAjW,GAAgZ,mC,WCwGhZ,GAnFwB,SAAHhK,GAA0B,IAApB6H,EAAY7H,EAAZ6H,aACnBvE,GAAyB9B,EAAAA,EAAAA,IAAY+B,EAAAA,IACrC0G,GAAqBzI,EAAAA,EAAAA,IAAY0I,EAAAA,IACjCC,GAAoB3I,EAAAA,EAAAA,IAAY4I,EAAAA,IAEhClK,GAAWC,EAAAA,EAAAA,MACXkK,EAAmB,SAAA9H,GACvBA,EAAE+H,iBACF,IAAMvB,EAASxG,EAAEC,OAAO+H,SAASxB,OAAOhI,MACxCP,QAAQC,IAAIsI,GACZ,IAAMF,EAActG,EAAEC,OAAO+H,SAAS1B,YAAY9H,MAC5C+H,EPjC+B,SAAA1G,GACrC,OAAQA,EAAK0D,QACX,IAAK,WACH,MAAO,mDACT,IAAK,UACH,MAAO,mDACT,IAAK,gBACH,MAAO,qEACT,IAAK,SACH,MAAO,mDACT,IAAK,YACH,MAAO,yDACT,IAAK,UACH,MAAO,iEACT,IAAK,WACH,MAAO,6CACT,IAAK,6BACH,MAAO,qGACT,IAAK,kBACH,MAAO,uEACT,IAAK,YACH,MAAO,qEACT,IAAK,QACH,MAAO,uCACT,IAAK,SACH,MAAO,gBACT,IAAK,oBACH,MAAO,qDAIb,COEmB0E,CACfjI,EAAEC,OAAO+H,SAASE,WAAW1J,OAEzB6G,EAjBe,SAAAA,GACvB,OAAO9G,EAAAA,EAAAA,SAAOwE,KAAK+C,MAAMT,GAAO,aAClC,CAeiB8C,CAAiB7C,GACxB8C,EAAU,CACd9B,YAAAA,EACAE,OAAQxI,OAAOwI,GACfnB,KAAAA,EACAkB,SAAAA,GAEFtI,QAAQC,IAAI,UAAWkK,GAErBzK,EAD6B,aAA3BoD,GACOsH,EAAAA,EAAAA,IAAsBD,IAKtBE,EAAAA,EAAAA,IAAqBF,GAKlC,EACA,OACEhL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,GAAaC,UAC3BC,EAAAA,EAAAA,MAAA,QAAMqJ,SAAU,SAAA7G,GAAC,OAAI8H,EAAiB9H,EAAE,EAAE3C,UAAWC,GAAOC,SAAA,EAC1DH,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLgC,KAAK,cACLS,YAAY,sBACZjD,UAAWC,MAEbF,EAAAA,EAAAA,KAAA,UAAQyC,KAAK,aAAaxC,UAAWC,GAASC,SAChB,aAA3BwD,EACG2G,EAAmBvE,KAAI,SAAAoD,GAAQ,OAC7BnJ,EAAAA,EAAAA,KAAA,UAEEoB,MAAO8E,EAA0BiD,GACjCpB,GAAG,gBAAe5H,SAEjB+F,EAA0BiD,KAJtBgC,EAAAA,GAAAA,MAKE,IAEXX,EAAkBzE,KAAI,SAAAoD,GAAQ,OAC5BnJ,EAAAA,EAAAA,KAAA,UAEEoB,MAAO8E,EAA0BiD,GACjCpB,GAAG,gBAAe5H,SAEjB+F,EAA0BiD,KAJtBgC,EAAAA,GAAAA,MAKE,OAGjBnL,EAAAA,EAAAA,KAAA,SACES,KAAK,SACLgC,KAAK,SACLS,YAAY,OACZjD,UAAWC,MAEbE,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,GAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASR,UAAWC,GAAYC,SAAC,WAG9CH,EAAAA,EAAAA,KAAA,UAAQS,KAAK,QAAQR,UAAWC,GAAYC,SAAC,iBAOvD,E,0CClEA,GA/BwB,SAAHE,GAA2C,IAArC6H,EAAY7H,EAAZ6H,aAAckD,EAAe/K,EAAf+K,gBACjCC,GAAqBC,EAAAA,EAAAA,aAAW,SAAAC,EAA+B1D,GAAG,IAA/BzG,EAAKmK,EAALnK,MAAOV,EAAO6K,EAAP7K,QAASiC,EAAQ4I,EAAR5I,SAAQ,OAC/D3C,EAAAA,EAAAA,KAAA,SACEoB,MAAOA,EACPnB,UAAU,QACVS,QAASA,EACTiC,SAAUA,EACVkF,IAAKA,EACL2D,UAAW,SAAA5I,GACTA,EAAE+H,gBACJ,GACO,IAEX,OACE3K,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWE,UACxBH,EAAAA,EAAAA,KAACyL,KAAU,CACTxL,UAAU,aACVyL,WAAW,aACXC,SAAUzD,EACVvF,SAAU,SAAAsF,GACRmD,EAAgBnD,EAElB,EACA2D,OAAQC,GAAAA,EACRC,QAAS,IAAInG,KACboG,kBAAkB,WAClBC,aAAahM,EAAAA,EAAAA,KAACqL,EAAkB,OAIxC,E,WCnCA,GAA4B,wBAA5B,GAA8D,sBAA9D,GAAmG,2BAAnG,GAA0I,wBAA1I,GAA+K,yB,sBCA/K,GAA2B,yCAA3B,GAAkF,4CAAlF,GAAuI,uCCsCvI,GAhC+B,SAAHhL,GAAmC,IAA7B4L,EAAO5L,EAAP4L,QAAS/D,EAAY7H,EAAZ6H,aACnCgE,EAAYC,SAASC,cAAc,eACnCC,EAAgB,SAAAzJ,GACL,WAAXA,EAAE0J,MACJL,GAEJ,EAaA,OALA7G,EAAAA,EAAAA,YAAU,WAER,OADAmH,OAAOC,iBAAiB,UAAWH,GAC5B,kBAAME,OAAOE,oBAAoB,UAAWJ,EAAe,CACpE,KAEOK,EAAAA,GAAAA,eACL1M,EAAAA,EAAAA,KAAA,OAAKU,QAZqB,SAAAkC,GACtBA,EAAE+J,gBAAkB/J,EAAEC,QACxBoJ,GAEJ,EAQqChM,UAAWC,GAAWC,UACvDC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,GAAcC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,UAAQU,QAASuL,EAAShM,UAAWC,GAASC,UAC5CH,EAAAA,EAAAA,KAAA,OAAKwD,IAAKoJ,GAAAA,EAAMtJ,MAAM,KAAKI,IAAI,iBAEjC1D,EAAAA,EAAAA,KAAC6M,GAAe,CAAC3E,aAAcA,SAGnCgE,EAEJ,ECoDA,GAvEa,WACX,IAAAjK,GAAsCC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA9CkG,EAAW9F,EAAA,GAAE+F,EAAc/F,EAAA,GAC5B2H,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MACrC4C,EAAc,IAAInH,KAClBoH,EAAeC,eAAeC,QAAQ,SAAWH,EACjDI,EAAoB,IAAIvH,KAAKoH,GAC7BI,EAAYD,GAAwCJ,EAC1D9H,GAAwC9C,EAAAA,EAAAA,UAASiL,GAAUlI,GAAA3C,EAAAA,EAAAA,GAAA0C,EAAA,GAApDkD,EAAYjD,EAAA,GAAEmG,EAAenG,EAAA,GAC9B1E,GAAWC,EAAAA,EAAAA,OAEjB4E,EAAAA,EAAAA,YAAU,WACR7E,GAAS6M,EAAAA,GAAAA,MACT7M,GAAS8M,EAAAA,GAAAA,MACT9M,GAAS+M,EAAAA,EAAAA,OACT/M,GAASgN,EAAAA,EAAAA,MACX,GAAG,CAAChN,IAEJ,IAAMiN,EAAc,SAAAvF,GAClB+E,eAAeS,QAAQ,OAAQC,KAAKC,UAAU1F,EAAK2F,aACnDxC,EAAgBnD,EAClB,EACMa,EAAc,WAClBV,GAAe,SAAAW,GAAC,OAAKA,CAAC,GACxB,EAEA,OACE3I,EAAAA,EAAAA,MAAA4I,EAAAA,SAAA,CAAA7I,SAAA,EACEH,EAAAA,EAAAA,KAAC6N,EAAO,KACR7N,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,GAAYC,SACxB6J,GAaA5J,EAAAA,EAAAA,MAAA4I,EAAAA,SAAA,CAAA7I,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,GAAUC,SAAA,EACxBH,EAAAA,EAAAA,KAAC8N,GAAe,CACd5F,aAAcA,EACdkD,gBAAiB,SAAAnD,GAAI,OAAIuF,EAAYvF,EAAK,KAE5CjI,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLR,UAAWC,GACXQ,QAASoI,EAAY3I,SACtB,qBAGDH,EAAAA,EAAAA,KAAC+N,GAAoB,CAAC7F,aAAcA,OAErCC,IACCnI,EAAAA,EAAAA,KAACgO,GAAsB,CACrB9F,aAAcA,EACdsB,WAAYV,EACZmD,QAASnD,QA/Bf1I,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,GAAeC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,GAAYC,SAAA,EAC1BH,EAAAA,EAAAA,KAAC8N,GAAe,CACd5F,aAAcA,EACdkD,gBAAiB,SAAAnD,GAAI,OAAIuF,EAAYvF,EAAK,KAE5CjI,EAAAA,EAAAA,KAAC6M,GAAe,CAAC3E,aAAcA,QAGjClI,EAAAA,EAAAA,KAAC+N,GAAoB,CAAC7F,aAAcA,WA8BhD,C,gOCvFO,IAEMqC,EAA2B,SAAA0D,GAAK,OAC3CA,EAAMC,aAAa5D,kBAAmB,EAC3BG,EAA0B,SAAAwD,GAAK,OAC1CA,EAAMC,aAAa1D,iBAAkB,EAE1BjC,EAAgB,SAAA0F,GAAK,OAAIA,EAAMC,aAAapJ,OAAQ,EACpDD,EAAqB,SAAAoJ,GAAK,OAAIA,EAAMC,aAAatJ,YAAa,EAC9D4D,EAAiB,SAAAyF,GAAK,OAAIA,EAAMC,aAAahJ,QAAS,EACtDP,EAAsB,SAAAsJ,GAAK,OAAIA,EAAMC,aAAaxJ,aAAc,EAChEd,EAA+B,SAAAqK,GAAK,OAC/CA,EAAMC,aAAavK,sBAAuB,EAE/B5B,EAAmB,SAAAkM,GAAK,OAAIA,EAAMC,aAAavN,UAAW,C","sources":["webpack://react-homework-template/./src/modules/shared/components/BalanceModal/BalanceModal.module.scss?f74a","modules/shared/components/BalanceModal/BalanceModal.jsx","webpack://react-homework-template/./src/modules/shared/components/Balance/Balance.module.scss?326e","modules/shared/components/Balance/BtnConfirmBalance.jsx","modules/shared/components/Balance/Balance.jsx","modules/shared/images/svg/diagram.svg","modules/shared/images/svg/trashcan.svg","webpack://react-homework-template/./src/modules/moduleHome/components/ReportsLink/ReportsLink.module.scss?bb5f","modules/moduleHome/components/ReportsLink/ReportsLink.jsx","webpack://react-homework-template/./src/modules/moduleHome/components/TransactionsNav/TransactionsNav.module.scss?4369","modules/moduleHome/components/TransactionsNav/TransactionsNav.jsx","webpack://react-homework-template/./src/modules/moduleHome/components/HomeBar/HomeBar.module.scss?49e7","modules/moduleHome/components/HomeBar/HomeBar.jsx","webpack://react-homework-template/./src/modules/moduleHome/components/TransactionContainer/TransactionContainer.module.scss?2ec1","webpack://react-homework-template/./src/modules/moduleHome/components/TransactionsSummary/TransactionsSummary.module.scss?8c97","modules/moduleHome/components/TransactionsSummary/monthTranslation.js","modules/moduleHome/components/TransactionsSummary/TransactionsSummary.jsx","modules/moduleHome/components/TransactionForm/translateFunc.js","webpack://react-homework-template/./src/modules/moduleHome/components/TransactionsList/TransactionsList.module.scss?33c0","modules/moduleHome/components/TransactionsList/TransactionsList.jsx","webpack://react-homework-template/./src/modules/moduleHome/components/TransactionListMobile/TransactionListMobile.module.scss?4864","modules/moduleHome/components/TransactionListMobile/TransactionListMobile.jsx","modules/moduleHome/components/TransactionContainer/TransactionContainer.jsx","webpack://react-homework-template/./src/modules/moduleHome/components/TransactionForm/TransactionForm.module.scss?a908","modules/moduleHome/components/TransactionForm/TransactionForm.jsx","modules/moduleHome/components/TransactionDate/TransactionDate.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.scss?ce6f","webpack://react-homework-template/./src/modules/moduleHome/components/MobileTransactionModal/MobileTransactionModal.module.scss?6efc","modules/moduleHome/components/MobileTransactionModal/MobileTransactionModal.jsx","pages/Home/Home.jsx","redux/transaction/transactionSelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalDiv\":\"BalanceModal_modalDiv__d8BCE\",\"largeText\":\"BalanceModal_largeText__2+Edk\",\"littleText\":\"BalanceModal_littleText__KKvb0\"};","import s from './BalanceModal.module.scss';\n\nconst BalanceModal = () => {\n  return (\n    <div className={s.fixedModal}>\n      <div className={s.modalDiv}>\n        <p className={s.largeText}>\n          Hello! To get started, enter the current balance of your account!\n        </p>\n        <p className={s.littleText}>\n          You can't spend money until you have it :)\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default BalanceModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"balance_title\":\"Balance_balance_title__mxOKl\",\"balance_submit\":\"Balance_balance_submit__Wo-7P\",\"balance_value\":\"Balance_balance_value__r0RMn\",\"balance_form\":\"Balance_balance_form__y-ZnM\"};","import { useDispatch } from 'react-redux';\nimport s from './Balance.module.scss';\nimport { setNewBalance, getAuthUser } from 'redux/auth/authOperations';\n\nconst BtnConfirmBalance = ({ balanceToUpdate }) => {\n  const dispatch = useDispatch();\n  const addBalance = () => {\n    const newBalance = Number(balanceToUpdate);\n    console.log(newBalance);\n    if (newBalance > 0) {\n      dispatch(setNewBalance({ newBalance: newBalance }));\n      setTimeout(() => {\n        dispatch(getAuthUser());\n      }, 200);\n    } else {\n      alert('The balance must be positive');\n    }\n  };\n\n  return (\n    <button type=\"button\" className={s.balance_submit} onClick={addBalance}>\n      Confirm\n    </button>\n  );\n};\n\nexport default BtnConfirmBalance;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport BalanceModal from '../BalanceModal/BalanceModal';\nimport BtnConfirmBalance from './BtnConfirmBalance';\nimport { selectBalance } from 'redux/auth/authSelectors';\n\nimport s from './Balance.module.scss';\nimport { selectNewBalance } from 'redux/transaction/transactionSelectors';\nconst format = value => {\n  const form = new Intl.NumberFormat('ru-RU', {\n    style: 'decimal',\n\n    minimumFractionDigits: 2,\n    useGrouping: 'min2',\n    unitDisplay: 'short',\n  })\n    .format(value)\n    .replace(',', '.');\n  // form.substring(0, 1) + ' ' + form.substring(1);\n  return form;\n};\nconst Balance = () => {\n  const initialBalance = useSelector(selectBalance);\n  const newBalance = useSelector(selectNewBalance);\n  const balance = newBalance === 0 ? initialBalance : newBalance;\n  const [input, setInput] = useState(\n    `${format(initialBalance.toFixed(2))} UAH`\n  ); //!!! BUG:  The specified value \"16160330.49 UAH\" cannot be parsed, or is out of range.\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <div className={s.balance_form}>\n      <h2 className={s.balance_title}>Balance:</h2>\n      <input\n        className={s.balance_value}\n        name=\"balance\"\n        title=\"Field must contain only numbers\"\n        type=\"number\"\n        value={input}\n        onChange={handleChange}\n        disabled={initialBalance === 0 ? false : true}\n        style={{\n          borderRadius: initialBalance === 0 ? '22px 0px 0px 22px' : '22px',\n          borderRight: initialBalance === 0 ? 'none' : '2px solid #80848F',\n          boxSizing: initialBalance === 0 ? 'border-box' : 'content-box,',\n        }}\n        placeholder={\n          initialBalance === 0\n            ? `00.00 UAH`\n            : `${format(balance.toFixed(2))} UAH`\n        }\n      />\n      {!initialBalance && <BtnConfirmBalance balanceToUpdate={input} />}\n      {!initialBalance && <BalanceModal />}\n    </div>\n  );\n};\n\nexport default Balance;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDiagram(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 14,\n    height: 14,\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#C7CCDC\",\n    d: \"M0 4.2h3V14H0V4.2ZM5.6 0h2.8v14H5.6V0Zm5.6 8H14v6h-2.8V8Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDiagram);\nexport default __webpack_public_path__ + \"static/media/diagram.68e03afe713740f7b7e7c5db20717faa.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTrashcan(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 14,\n    height: 18,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"trashcan\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 26c0 1.656 1.343 3 3 3h10c1.656 0 3-1.344 3-3l2-16h-20l2 16zM19 13h2v13h-2v-13zM15 13h2v13h-2v-13zM11 13h2v13h-2v-13zM25.5 6h-6.5c0 0-0.448-2-1-2h-4c-0.553 0-1 2-1 2h-6.5c-0.829 0-1.5 0.671-1.5 1.5s0 1.5 0 1.5h22c0 0 0-0.671 0-1.5s-0.672-1.5-1.5-1.5z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrashcan);\nexport default __webpack_public_path__ + \"static/media/trashcan.dce081ce6b9c7368b5dac27a3d72151c.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"reports\":\"ReportsLink_reports__OWJSL\"};","import svgDiagram from '../../../shared/images/svg/diagram.svg'\nimport s from './ReportsLink.module.scss';\n\nconst ReportsLink = () => {\n\n  return (\n    <div to=\"/report\">\n      <span className={s.reports} width='24px' height='24px'>\n        Reports\n        <img src={svgDiagram} alt=\"Diagram\" />\n      </span>\n    </div>\n  );\n};\n\nexport default ReportsLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TransactionsNav_container__UNgNG\",\"one\":\"TransactionsNav_one__UwTja\",\"two\":\"TransactionsNav_two__dYkGa\"};","import React from 'react';\nimport styles from './TransactionsNav.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentTransactionType } from 'redux/transaction/transactionSelectors';\nimport { changeTransactionType } from 'redux/transaction/transactionSlice';\nconst TransactionsNav = () => {\n  const dispatch = useDispatch();\n  const currentTransactionType = useSelector(selectCurrentTransactionType);\n  return (\n    <div className={styles.container}>\n      <button\n        style={{\n          boxShadow:\n            currentTransactionType === 'expenses'\n              ? '0px 0px 6px #41A350'\n              : 'none',\n          backgroundColor:\n            currentTransactionType === 'expenses' ? '#383847' : '#2D2D38',\n          color: currentTransactionType === 'expenses' ? '#60C470' : '#F6F7FB',\n          borderColor:\n            currentTransactionType === 'expenses' ? '#60C470' : 'transparent',\n        }}\n        onClick={() => dispatch(changeTransactionType('expenses'))}\n        type=\"button\"\n        // to=\"/expenses\"\n        className={styles.one}\n      >\n        Expenses\n      </button>\n      <button\n        style={{\n          boxShadow:\n            currentTransactionType === 'incomes'\n              ? '0px 0px 6px #41A350'\n              : 'none',\n          backgroundColor:\n            currentTransactionType === 'incomes' ? '#383847' : '#2D2D38',\n          color: currentTransactionType === 'incomes' ? '#60C470' : '#F6F7FB',\n          borderColor:\n            currentTransactionType === 'incomes' ? '#60C470' : 'transparent',\n        }}\n        onClick={() => dispatch(changeTransactionType('incomes'))}\n        type=\"button\"\n        // to=\"/income\"\n        className={styles.two}\n      >\n        Income\n      </button>\n    </div>\n  );\n};\n\nexport default TransactionsNav;\n","// extracted by mini-css-extract-plugin\nexport default {\"bar\":\"HomeBar_bar__xjc9R\"};","import Balance from 'modules/shared/components/Balance/Balance';\nimport ReportsLink from 'modules/moduleHome/components/ReportsLink/ReportsLink';\nimport { NavLink } from 'react-router-dom';\nimport TransactionsNav from 'modules/moduleHome/components/TransactionsNav/TransactionsNav';\nimport s from 'modules/moduleHome/components/HomeBar/HomeBar.module.scss';\nimport { selectBalance } from 'redux/auth/authSelectors';\nimport { useSelector } from 'react-redux';\n\n\nconst HomeBar = () => {\n  const initialBalance = useSelector(selectBalance);\n\n  \n  \n  return (\n    <section>\n      <div\n        className={s.bar}\n        style={{ gap: initialBalance === 0 ? '251px' : '391px' }}\n      >\n        <NavLink\n          to=\"/reports\"\n          style={{ pointerEvents: initialBalance === 0 ? 'none' : 'auto' }}\n        >\n          <ReportsLink />\n        </NavLink>\n        <Balance />\n      </div>\n      <TransactionsNav />\n    </section>\n  );\n};\n\nexport default HomeBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"tab_deskContainer\":\"TransactionContainer_tab_deskContainer__-+EXK\",\"sectionContainer\":\"TransactionContainer_sectionContainer__cTzvk\"};","// extracted by mini-css-extract-plugin\nexport default {\"summaryWrapper\":\"TransactionsSummary_summaryWrapper__Qbqbu\",\"summaryBody\":\"TransactionsSummary_summaryBody__8XgKX\",\"summaryTable\":\"TransactionsSummary_summaryTable__F5XwZ\",\"summaryTableHeading\":\"TransactionsSummary_summaryTableHeading__6AAW5\",\"summaryLine\":\"TransactionsSummary_summaryLine__U8dPH\",\"summaryTableCell\":\"TransactionsSummary_summaryTableCell__-USY7\"};","export const monthTranslation = name => {\n  switch (name) {\n    case 'Январь':\n      return 'January';\n    case 'Февраль':\n      return 'February';\n    case 'Март':\n      return 'March';\n    case 'Апрель':\n      return 'April';\n    case 'Май':\n      return 'May';\n    case 'Июнь':\n      return 'June';\n    case 'Июль':\n      return 'July';\n    case 'Август':\n      return 'August';\n    case 'Сентябрь':\n      return 'September';\n    case 'Октябрь':\n      return 'October';\n    case 'Ноябрь':\n      return 'November';\n    case 'Декабрь':\n      return 'December';\n    default:\n      break;\n  }\n};\n\nexport const monthObj = [\n  { '01': 'Январь' },\n  { '02': 'Февраль' },\n  { '03': 'Март' },\n  { '04': 'Апрель' },\n  { '05': 'Май' },\n  { '06': 'Июнь' },\n  { '07': 'Июль' },\n  { '08': 'Август' },\n  { '09': 'Сентябрь' },\n  { 10: 'Октябрь' },\n  { 11: 'Ноябрь' },\n  { 12: 'Декабрь' },\n];\n","import s from './TransactionsSummary.module.scss';\nimport { useSelector } from 'react-redux';\nimport { monthTranslation } from './monthTranslation';\nimport {\n  selectExpensesStats,\n  selectIncomesStats,\n  selectCurrentTransactionType,\n} from 'redux/transaction/transactionSelectors';\nimport { useEffect, useState } from 'react';\n\nconst format1 = value => {\n  const form = new Intl.NumberFormat('ru-RU', {\n    style: 'decimal',\n    currency: 'UAH',\n    // currencyDisplay: 'name',\n    // signDisplay: 'exceptZero',\n    minimumFractionDigits: 2,\n    useGrouping: 'min2',\n  })\n    .format(value)\n    .replace(',', '.');\n  // form.substring(0, 1) + ' ' + form.substring(1);\n  return form;\n};\n\nconst TransactionsSummary = () => {\n  const expensesStats = useSelector(selectExpensesStats);\n  const incomesStats = useSelector(selectIncomesStats);\n  const currentTransactionType = useSelector(selectCurrentTransactionType);\n\n  const [incomes, setIncomes] = useState(incomesStats);\n\n  const [expenses, setExpenses] = useState(expensesStats);\n\n  useEffect(() => {\n    setIncomes(incomesStats);\n  }, [incomesStats]);\n\n  useEffect(() => {\n    setExpenses(expensesStats);\n  }, [expensesStats]);\n\n  let summaryData = [];\n\n  if (currentTransactionType === 'incomes') {\n    summaryData =\n      Object.entries(incomes)\n        .slice(0, new Date().getMonth() + 1)\n        .reverse() ?? [];\n  } else {\n    summaryData =\n      Object.entries(expenses)\n        .slice(0, new Date().getMonth() + 1)\n        .reverse() ?? [];\n  }\n\n  return (\n    <div className={s.summaryWrapper}>\n      <table className={s.summaryTable}>\n        <thead className={s.summaryHead}>\n          <tr>\n            <th colSpan=\"2\" className={s.summaryTableHeading}>\n              Summary\n            </th>\n          </tr>\n        </thead>\n        <tbody className={s.summaryBody}>\n          {summaryData.map(el => {\n            if (el[1] === 'N/A') {\n              el[1] = 0;\n            }\n\n            return (\n              <tr key={`${el[0]}${el[1]}`} className={s.summaryLine}>\n                <td className={s.summaryTableCell}>\n                  {monthTranslation(el[0])}\n                </td>\n                <td className={s.summaryTableCell}>{format1(el[1])}</td>\n              </tr>\n            );\n          })}\n          <tr style={{ height: 38 }} className={s.summaryLine}>\n            <td className={s.summaryTableCell}></td>\n            <td className={s.summaryTableCell}></td>\n          </tr>\n          <tr style={{ height: 38 }} className={s.summaryLine}>\n            <td className={s.summaryTableCell}></td>\n            <td className={s.summaryTableCell}></td>\n          </tr>\n          <tr style={{ height: 38 }} className={s.summaryLine}>\n            <td className={s.summaryTableCell}></td>\n            <td className={s.summaryTableCell}></td>\n          </tr>\n          <tr style={{ height: 38 }} className={s.summaryLine}>\n            <td className={s.summaryTableCell}></td>\n            <td className={s.summaryTableCell}></td>\n          </tr>\n          <tr style={{ height: 38 }} className={s.summaryLine}>\n            <td className={s.summaryTableCell}></td>\n            <td className={s.summaryTableCell}></td>\n          </tr>\n          <tr style={{ height: 38 }} className={s.summaryLine}>\n            <td className={s.summaryTableCell}></td>\n            <td className={s.summaryTableCell}></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TransactionsSummary;\n","export const categoryTranslationEnToRu = name => {\n    switch (name.trim()) {\n      case 'Products':\n        return 'Продукты';\n      case 'Alcohol':\n        return 'Алкоголь';\n      case 'Entertainment':\n        return 'Развлечения';\n      case 'Health':\n        return 'Здоровье';\n      case 'Transport':\n        return 'Транспорт';\n      case 'Housing':\n        return 'Всё для дома';\n      case 'Technics':\n        return 'Техника';\n      case 'Communal and communication':\n        return 'Коммуналка и связь';\n      case 'Sport and hobby':\n        return 'Спорт и хобби';\n      case 'Education':\n        return 'Образование';\n      case 'Other':\n        return 'Прочее';\n      case 'Salary':\n        return 'З/П';\n      case 'Additional income':\n        return 'Доп. доход';\n      default:\n        break;\n    }\n  };\n  \n  export const categoryTranslationRuToEn = name => {\n    switch (name.trim()) {\n      case 'Продукты':\n        return 'Products';\n      case 'Алкоголь':\n        return 'Alcohol';\n      case 'Развлечения':\n        return 'Entertainment';\n      case 'Здоровье':\n        return 'Health';\n      case 'Транспорт':\n        return 'Transport';\n      case 'Всё для дома':\n        return 'Housing';\n      case 'Техника':\n        return 'Technics';\n      case 'Коммуналка и связь':\n        return 'Communal and communication';\n      case 'Спорт и хобби':\n        return 'Sport and hobby';\n      case 'Образование':\n        return 'Education';\n      case 'Прочее':\n        return 'Other';\n      case 'З/П':\n        return 'Salary';\n      case 'Доп. доход':\n        return 'Additional income';\n      default:\n        break;\n    }\n  };","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TransactionsList_container__Xc7iz\",\"table\":\"TransactionsList_table__K7Azm\",\"header\":\"TransactionsList_header__i5FZX\",\"header_line\":\"TransactionsList_header_line__S+Dl8\",\"header_text\":\"TransactionsList_header_text__uW4rT\",\"header_text_third\":\"TransactionsList_header_text_third__91N9-\",\"header_text_fourth\":\"TransactionsList_header_text_fourth__sGl+K\",\"body\":\"TransactionsList_body__WGrty\",\"body_line\":\"TransactionsList_body_line__Djhdd\",\"body_item\":\"TransactionsList_body_item__8oLYC\",\"body_item_second\":\"TransactionsList_body_item_second__RDRWX\",\"body_item_red\":\"TransactionsList_body_item_red__DtqXq\",\"icon\":\"TransactionsList_icon__8SDLI\",\"button\":\"TransactionsList_button__Ysrc7\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteTransaction } from 'redux/transaction/transactionOperations';\nimport {\n  selectCurrentTransactionType,\n  selectExpenses,\n  selectIncomes,\n} from 'redux/transaction/transactionSelectors';\nimport { format } from 'date-fns';\nimport { deleteTransactionById } from 'redux/transaction/transactionSlice';\nimport { categoryTranslationRuToEn } from '../TransactionForm/translateFunc';\nimport s from './TransactionsList.module.scss';\nimport { ReactComponent as Bucket } from 'modules/shared/images/svg/trashcan.svg';\nimport { useState } from 'react';\nimport ModalConsern from 'modules/moduleConfirmations/components/ModalConsern/ModalConsern';\n//import { getAuthUser } from 'redux/auth/authOperations';\n\nconst formatEventStart = date => {\n  return format(Date.parse(date), 'yyyy-MM-dd');\n};\n\nconst TransactionsList = ({ selectedDate }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [idTrans, setIdTrans] = useState(null);\n\n  const currentTransactionType = useSelector(selectCurrentTransactionType);\n  const incomes = useSelector(selectIncomes);\n\n  const expenses = useSelector(selectExpenses);\n\n  const dispatch = useDispatch();\n  const normalizedDate = formatEventStart(selectedDate);\n\n  const filteredTransactions =\n    currentTransactionType === 'incomes'\n      ? incomes.filter(transaction => transaction.date === normalizedDate)\n      : expenses.filter(transaction => transaction.date === normalizedDate);\n  const toggleModal = id => {\n    setIdTrans(id);\n    setModalIsOpen(p => !p);\n  };\n\n  // const handleClickDelete = () => {\n  //   setIdTrans(trans._id);\n  // };\n\n  const handlerDeleteClick = () => {\n    dispatch(deleteTransaction(idTrans));\n    dispatch(deleteTransactionById(idTrans));\n    // setTimeout(() => {\n    //   dispatch(getAuthUser());\n    // }, 200);\n  };\n\n  return (\n    <>\n      <div className={s.container}>\n        <table className={s.table}>\n          <thead className={s.header}>\n            <tr className={s.header_line}>\n              <th className={s.header_text}>Date</th>\n              <th className={s.header_text}>Description</th>\n              <th className={s.header_text_third}>Category</th>\n              <th className={s.header_text_fourth}>Sum</th>\n              <th className={s.header_text}></th>\n            </tr>\n          </thead>\n          <tbody className={s.body}>\n            {filteredTransactions.map(trans => (\n              <tr key={trans._id} className={s.body_line}>\n                <td className={s.body_item}>{trans.date}</td>\n                <td className={s.body_item_second}>{trans.description}</td>\n                <td className={s.body_item}>\n                  {categoryTranslationRuToEn(trans.category)}\n                </td>\n                <td\n                  style={{\n                    color:\n                      currentTransactionType === 'incomes'\n                        ? '#60C470'\n                        : '#FE4566',\n                  }}\n                  className={s.body_item_red}\n                >\n                  {currentTransactionType === 'incomes'\n                    ? `${trans.amount} UAH`\n                    : `- ${trans.amount} UAH`}\n                </td>\n                <td className={s.body_item}>\n                  <button\n                    type=\"button\"\n                    onClick={() => toggleModal(trans._id)}\n                    className={s.button}\n                  >\n                    <Bucket className={s.icon} />\n                  </button>\n                </td>\n              </tr>\n            ))}\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n            <tr className={s.body_line} style={{ height: 38 }}>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_second}></td>\n              <td className={s.body_item}></td>\n              <td className={s.body_item_red}></td>\n              <td></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      {modalIsOpen && (\n        <ModalConsern\n          closeModal={toggleModal}\n          onSubmit={handlerDeleteClick}\n          title=\"Are you sure?\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default TransactionsList;\n\n// {() => handlerDeleteClick(trans._id)}\n// handlerDeleteClick(idTrans)\n","// extracted by mini-css-extract-plugin\nexport default {\"mobileContainer\":\"TransactionListMobile_mobileContainer__uE4Bu\",\"mobileList\":\"TransactionListMobile_mobileList__-SSwa\",\"mobileItem\":\"TransactionListMobile_mobileItem__3QJKX\",\"categoryContainer\":\"TransactionListMobile_categoryContainer__8jRZM\",\"categoryDescription\":\"TransactionListMobile_categoryDescription__X4to-\",\"categoryWrapper\":\"TransactionListMobile_categoryWrapper__BPgQH\",\"transactionDate\":\"TransactionListMobile_transactionDate__RSslA\",\"ammountWrapper\":\"TransactionListMobile_ammountWrapper__XEOsv\",\"transactionAmount\":\"TransactionListMobile_transactionAmount__jQPoP\",\"button\":\"TransactionListMobile_button__gJFpl\",\"icon\":\"TransactionListMobile_icon__DyRIm\"};","import { useMediaQuery } from 'react-responsive';\nimport s from './TransactionListMobile.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTransaction } from 'redux/transaction/transactionOperations';\nimport {\n  selectCurrentTransactionType,\n  selectExpenses,\n  selectIncomes,\n} from 'redux/transaction/transactionSelectors';\nimport { format } from 'date-fns';\nimport { deleteTransactionById } from 'redux/transaction/transactionSlice';\nimport { ReactComponent as Bucket } from 'modules/shared/images/svg/trashcan.svg';\nimport { useState } from 'react';\nimport ModalConsern from 'modules/moduleConfirmations/components/ModalConsern/ModalConsern';\n\nconst formatEventStart = date => {\n  return format(Date.parse(date), 'yyyy-MM-dd');\n};\n\nconst format1 = value => {\n  const form = new Intl.NumberFormat('ru-RU', {\n    style: 'decimal',\n    currency: 'UAH',\n    // currencyDisplay: 'name',\n    signDisplay: 'exceptZero',\n    minimumFractionDigits: 2,\n    useGrouping: 'min2',\n  })\n    .format(value)\n    .replace(',', '.');\n\n  return form.substring(0, 1) + ' ' + form.substring(1);\n};\n\nconst TransactionsListMobile = ({ selectedDate }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [idTrans, setIdTrans] = useState(null);\n  //   console.log(selectedDate);\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n\n  const currentTransactionType = useSelector(selectCurrentTransactionType);\n  const incomes = useSelector(selectIncomes);\n  const expenses = useSelector(selectExpenses);\n\n  const dispatch = useDispatch();\n  const normalizedDate = formatEventStart(selectedDate);\n\n  const filteredTransactions =\n    currentTransactionType === 'incomes'\n      ? incomes.filter(transaction => transaction.date === normalizedDate)\n      : expenses.filter(transaction => transaction.date === normalizedDate);\n  // console.log(isMobile);\n\n  const toggleModal = id => {\n    setIdTrans(id);\n    setModalIsOpen(p => !p);\n  };\n\n  const handlerDeleteClick = () => {\n    dispatch(deleteTransaction(idTrans));\n    dispatch(deleteTransactionById(idTrans));\n    // setTimeout(() => {\n    //   dispatch(getAuthUser());\n    // }, 200);\n  };\n  // console.log(currentTransactionType);\n  // console.log(filteredTransactions);\n\n  return (\n    <>\n      <div className={s.mobileContainer}>\n        {isMobile && (\n          <ul className={s.mobileList}>\n            {filteredTransactions.map(el => (\n              <li className={s.mobileItem} key={el._id}>\n                <div className={s.categoryContainer}>\n                  <p className={s.categoryDescription}>{el.description}</p>\n                  <div className={s.categoryWrapper}>\n                    <span className={s.transactionDate}>{el.date}</span>\n                    <span>{el.category}</span>\n                  </div>\n                </div>\n                <div className={s.ammountWrapper}>\n                  <p\n                    className={s.transactionAmount}\n                    style={{\n                      color:\n                        currentTransactionType === 'incomes'\n                          ? '#60C470'\n                          : '#FE4566',\n                    }}\n                  >\n                    {currentTransactionType === 'incomes'\n                      ? `${format1(el.amount)} UAH`\n                      : `- ${format1(el.amount)} UAH`}\n                  </p>\n                  <button\n                    onClick={() => toggleModal(el._id)}\n                    className={s.button}\n                  >\n                    <Bucket className={s.icon} />\n                  </button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      {modalIsOpen && (\n        <ModalConsern\n          closeModal={toggleModal}\n          onSubmit={handlerDeleteClick}\n          title=\"Are you sure?\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default TransactionsListMobile;\n","import { useMediaQuery } from 'react-responsive';\nimport s from './TransactionContainer.module.scss';\n\nimport TransactionsSummary from 'modules/moduleHome/components/TransactionsSummary/TransactionsSummary';\nimport TransactionsList from 'modules/moduleHome/components/TransactionsList/TransactionsList';\nimport TransactionsListMobile from '../TransactionListMobile/TransactionListMobile';\n\nconst TransactionContainer = ({ selectedDate }) => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  //  const isTablet = useMediaQuery({ maxWidth: 1199 });\n  //  const isDesktop = useMediaQuery({ maxWidth: 1279 });\n  return (\n    <section className={s.sectionContainer}>\n      {isMobile ? (\n        <TransactionsListMobile selectedDate={selectedDate} />\n      ) : (\n        <div className={s.tab_deskContainer}>\n          <TransactionsList selectedDate={selectedDate} />\n          <TransactionsSummary />\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default TransactionContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"mobileForm\":\"TransactionForm_mobileForm__hPZ8R\",\"form\":\"TransactionForm_form__fydIk\",\"btn_container\":\"TransactionForm_btn_container__PLLa0\",\"input\":\"TransactionForm_input__hcPPg\",\"select\":\"TransactionForm_select__FnciQ\",\"select-option\":\"TransactionForm_select-option__QGrVq\",\"input_calc\":\"TransactionForm_input_calc__PnHCG\",\"btn_input\":\"TransactionForm_btn_input__T6iv1\",\"btn_clear\":\"TransactionForm_btn_clear__V56ge\"};","// import Select from 'react-select';\nimport { format } from 'date-fns';\nimport s from './TransactionForm.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectCurrentTransactionType,\n  selectExpensesCategories,\n  selectIncomesCategories,\n} from 'redux/transaction/transactionSelectors';\nimport {\n  addTransactionExpense,\n  addTransactionIncome,\n} from 'redux/transaction/transactionOperations';\nimport {\n  categoryTranslationEnToRu,\n  categoryTranslationRuToEn,\n} from './translateFunc';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst formatEventStart = date => {\n  return format(Date.parse(date), 'yyyy-MM-dd');\n};\nconst TransactionForm = ({ selectedDate }) => {\n  const currentTransactionType = useSelector(selectCurrentTransactionType);\n  const expensesCategories = useSelector(selectExpensesCategories);\n  const incomesCategories = useSelector(selectIncomesCategories);\n\n  const dispatch = useDispatch();\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const amount = e.target.elements.amount.value;\n    console.log(amount);\n    const description = e.target.elements.description.value;\n    const category = categoryTranslationEnToRu(\n      e.target.elements.categories.value\n    );\n    const date = formatEventStart(selectedDate);\n    const payload = {\n      description,\n      amount: Number(amount),\n      date,\n      category,\n    };\n    console.log('payload', payload);\n    if (currentTransactionType === 'expenses') {\n      dispatch(addTransactionExpense(payload));\n      // setTimeout(() => {\n      //   dispatch(getAuthUser());\n      // }, 200);\n    } else {\n      dispatch(addTransactionIncome(payload));\n      // setTimeout(() => {\n      //   dispatch(getAuthUser());\n      // }, 200);\n    }\n  };\n  return (\n    <div className={s.mobileForm}>\n      <form onSubmit={e => handleFormSubmit(e)} className={s.form}>\n        <input\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Product description\"\n          className={s.input}\n        />\n        <select name=\"categories\" className={s.select}>\n          {currentTransactionType === 'expenses'\n            ? expensesCategories.map(category => (\n                <option\n                  key={nanoid()}\n                  value={categoryTranslationRuToEn(category)}\n                  id=\"select-option\"\n                >\n                  {categoryTranslationRuToEn(category)}\n                </option>\n              ))\n            : incomesCategories.map(category => (\n                <option\n                  key={nanoid()}\n                  value={categoryTranslationRuToEn(category)}\n                  id=\"select-option\"\n                >\n                  {categoryTranslationRuToEn(category)}\n                </option>\n              ))}\n        </select>\n        <input\n          type=\"number\"\n          name=\"amount\"\n          placeholder=\"0.00\"\n          className={s.input_calc}\n        ></input>\n        <div className={s.btn_container}>\n          <button type=\"submit\" className={s.btn_input}>\n            Input\n          </button>\n          <button type=\"reset\" className={s.btn_clear}>\n            Clear\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TransactionForm;\n","import { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './TransactionDate.scss';\nimport { enGB } from 'date-fns/locale';\n\nconst TransactionDate = ({ selectedDate, setSelectedDate }) => {\n  const ExampleCustomInput = forwardRef(({ value, onClick, onChange }, ref) => (\n    <input\n      value={value}\n      className=\"input\"\n      onClick={onClick}\n      onChange={onChange}\n      ref={ref}\n      onKeyDown={e => {\n        e.preventDefault();\n      }}\n    ></input>\n  ));\n  return (\n    <div className=\"container\">\n      <DatePicker\n        className=\"datepicker\"\n        dateFormat=\"dd.MM.yyyy\"\n        selected={selectedDate}\n        onChange={date => {\n          setSelectedDate(date);\n          // console.log(selectedDate);\n        }}\n        locale={enGB}\n        maxDate={new Date()}\n        calendarClassName=\"calendar\"\n        customInput={<ExampleCustomInput />}\n      />\n    </div>\n  );\n};\nexport default TransactionDate;\n// допилить логику перезагрузки страницы. Если выбираем дату на дейт пикере а потом обновляем страницу - дата ставится на сегодня.\n// МЕМОИЗАЦИЯ\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__qRlyu\",\"mobWrap\":\"Home_mobWrap__mwq3l\",\"tab_deskWrap\":\"Home_tab_deskWrap__xmUBC\",\"form_wrap\":\"Home_form_wrap__NjNx+\",\"open_modal\":\"Home_open_modal__RNyVW\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"MobileTransactionModal_backdrop__KQwBV\",\"modalWindow\":\"MobileTransactionModal_modalWindow__fCYbh\",\"button\":\"MobileTransactionModal_button__USDS3\"};","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport icon from '../../../shared/images/svg/close.svg';\nimport s from '../../components/MobileTransactionModal/MobileTransactionModal.module.scss';\nimport TransactionForm from '../TransactionForm/TransactionForm';\n\nconst MobileTransactionModal = ({ onClose, selectedDate }) => {\n  const modalRoot = document.querySelector('#modal-root');\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  return createPortal(\n    <div onClick={handleBackdropClick} className={s.backdrop}>\n      <div className={s.modalWindow}>\n        <button onClick={onClose} className={s.button}>\n          <img src={icon} width=\"12\" alt=\"closeicon\" />\n        </button>\n        <TransactionForm selectedDate={selectedDate} />\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default MobileTransactionModal;\n\nMobileTransactionModal.propTypes = {\n  onClose: PropTypes.func,\n};\n","import { useMediaQuery } from 'react-responsive';\nimport HomeBar from 'modules/moduleHome/components/HomeBar/HomeBar';\nimport TransactionContainer from 'modules/moduleHome/components/TransactionContainer/TransactionContainer';\nimport TransactionForm from 'modules/moduleHome/components/TransactionForm/TransactionForm';\nimport TransactionDate from 'modules/moduleHome/components/TransactionDate/TransactionDate';\nimport { useEffect, useState } from 'react';\nimport {\n  getTransactionExpenseCategories,\n  getTransactionIncomeCategories,\n} from 'redux/reports/reportsOperations';\nimport {\n  getTransactionIncome,\n  getTransactionExpense,\n} from 'redux/transaction/transactionOperations';\nimport { useDispatch } from 'react-redux';\nimport s from './Home.module.scss';\nimport MobileTransactionModal from 'modules/moduleHome/components/MobileTransactionModal/MobileTransactionModal';\n\nconst Home = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const currentDate = new Date();\n  const storagedDate = sessionStorage.getItem('date') || currentDate;\n  const parsedStorageDate = new Date(storagedDate);\n  const dateToSet = parsedStorageDate ? parsedStorageDate : currentDate;\n  const [selectedDate, setSelectedDate] = useState(dateToSet);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTransactionExpenseCategories());\n    dispatch(getTransactionIncomeCategories());\n    dispatch(getTransactionIncome());\n    dispatch(getTransactionExpense());\n  }, [dispatch]);\n\n  const handlerDate = date => {\n    sessionStorage.setItem('date', JSON.stringify(date.toString()));\n    setSelectedDate(date);\n  };\n  const toggleModal = () => {\n    setModalIsOpen(p => !p);\n  };\n\n  return (\n    <>\n      <HomeBar />\n      <div className={s.container}>\n        {!isMobile ? (\n          <div className={s.tab_deskWrap}>\n            <div className={s.form_wrap}>\n              <TransactionDate\n                selectedDate={selectedDate}\n                setSelectedDate={date => handlerDate(date)}\n              />\n              <TransactionForm selectedDate={selectedDate} />\n            </div>\n\n            <TransactionContainer selectedDate={selectedDate} />\n          </div>\n        ) : (\n          <>\n            <div className={s.mobWrap}>\n              <TransactionDate\n                selectedDate={selectedDate}\n                setSelectedDate={date => handlerDate(date)}\n              />\n              <button\n                type=\"button\"\n                className={s.open_modal}\n                onClick={toggleModal}\n              >\n                Add transaction\n              </button>\n              <TransactionContainer selectedDate={selectedDate} />\n            </div>\n            {modalIsOpen && (\n              <MobileTransactionModal\n                selectedDate={selectedDate}\n                closeModal={toggleModal}\n                onClose={toggleModal}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","export const selectPeriod = state => state.transactions.transaction;\nexport const selectAllCategories = state => state.transactions.categories;\nexport const selectExpensesCategories = state =>\n  state.transactions.expensesCategories;\nexport const selectIncomesCategories = state =>\n  state.transactions.incomesCategories;\nexport const selectSelectedDate = state => state.transactions.selectedDate;\nexport const selectIncomes = state => state.transactions.incomes;\nexport const selectIncomesStats = state => state.transactions.incomesStats;\nexport const selectExpenses = state => state.transactions.expenses;\nexport const selectExpensesStats = state => state.transactions.expensesStats;\nexport const selectCurrentTransactionType = state =>\n  state.transactions.currentTransactionType;\n\nexport const selectNewBalance = state => state.transactions.newBalance;\n"],"names":["_jsx","className","s","children","_jsxs","_ref","balanceToUpdate","dispatch","useDispatch","type","onClick","newBalance","Number","console","log","setNewBalance","setTimeout","getAuthUser","alert","format","value","Intl","NumberFormat","style","minimumFractionDigits","useGrouping","unitDisplay","replace","initialBalance","useSelector","selectBalance","selectNewBalance","balance","_useState","useState","concat","toFixed","_useState2","_slicedToArray","input","setInput","name","title","onChange","e","target","disabled","borderRadius","borderRight","boxSizing","placeholder","BtnConfirmBalance","BalanceModal","to","width","height","src","svgDiagram","alt","currentTransactionType","selectCurrentTransactionType","styles","boxShadow","backgroundColor","color","borderColor","changeTransactionType","gap","NavLink","pointerEvents","ReportsLink","Balance","TransactionsNav","monthTranslation","expensesStats","selectExpensesStats","incomesStats","selectIncomesStats","incomes","setIncomes","_useState3","_useState4","expenses","setExpenses","useEffect","_Object$entries$slice","_Object$entries$slice2","summaryData","Object","entries","slice","Date","getMonth","reverse","colSpan","map","el","currency","categoryTranslationRuToEn","trim","assign","bind","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTrashcan","svgRef","titleId","props","xmlns","viewBox","ref","undefined","id","d","date","selectedDate","modalIsOpen","setModalIsOpen","idTrans","setIdTrans","selectIncomes","selectExpenses","normalizedDate","parse","filteredTransactions","filter","transaction","toggleModal","p","_Fragment","trans","description","category","amount","_id","Bucket","ModalConsern","closeModal","onSubmit","deleteTransaction","deleteTransactionById","format1","form","signDisplay","substring","isMobile","useMediaQuery","maxWidth","TransactionsListMobile","TransactionsList","TransactionsSummary","expensesCategories","selectExpensesCategories","incomesCategories","selectIncomesCategories","handleFormSubmit","preventDefault","elements","categoryTranslationEnToRu","categories","formatEventStart","payload","addTransactionExpense","addTransactionIncome","nanoid","setSelectedDate","ExampleCustomInput","forwardRef","_ref2","onKeyDown","DatePicker","dateFormat","selected","locale","enGB","maxDate","calendarClassName","customInput","onClose","modalRoot","document","querySelector","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","icon","TransactionForm","currentDate","storagedDate","sessionStorage","getItem","parsedStorageDate","dateToSet","getTransactionExpenseCategories","getTransactionIncomeCategories","getTransactionIncome","getTransactionExpense","handlerDate","setItem","JSON","stringify","toString","HomeBar","TransactionDate","TransactionContainer","MobileTransactionModal","state","transactions"],"sourceRoot":""}